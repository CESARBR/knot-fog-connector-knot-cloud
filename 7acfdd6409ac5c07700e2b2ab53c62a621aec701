{
  "comments": [
    {
      "key": {
        "uuid": "74e36689_c86a9ff5",
        "filename": "src/Connector.js",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1013086
      },
      "writtenOn": "2019-02-07T21:09:40Z",
      "side": 1,
      "message": "You are recreating the same connection, which is discard right after multiple times. Can\u0027t you create the session tokens for all devices using a single connection (`this.client` above)?",
      "range": {
        "startLine": 35,
        "startChar": 34,
        "endLine": 35,
        "endChar": 96
      },
      "revId": "7acfdd6409ac5c07700e2b2ab53c62a621aec701",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1a8ea50_0821267b",
        "filename": "src/Connector.js",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1013086
      },
      "writtenOn": "2019-02-07T21:09:40Z",
      "side": 1,
      "message": "Don\u0027t you need to return the promise, so that who is starting the connector waits until all connections are established? Also, if a connection fails, it will throw an unhandled promise rejection notice.",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 15
      },
      "revId": "7acfdd6409ac5c07700e2b2ab53c62a621aec701",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0293a91_6b7e7df7",
        "filename": "src/Connector.js",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1013096
      },
      "writtenOn": "2019-02-08T18:17:15Z",
      "side": 1,
      "message": "I was unable to do this due the createSessionToken just returns the token and not the uuid related to the request.\n\nWhat was happening is that I was creating so many `once` subscriptions waiting for the event `created` and when the first token is created all the listeners returns the same token. So just one connection was made successfully and the other ones receive a Forbidden error message.",
      "parentUuid": "74e36689_c86a9ff5",
      "range": {
        "startLine": 35,
        "startChar": 34,
        "endLine": 35,
        "endChar": 96
      },
      "revId": "7acfdd6409ac5c07700e2b2ab53c62a621aec701",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3697bb8_04dba38e",
        "filename": "src/Connector.js",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1013086
      },
      "writtenOn": "2019-02-08T18:46:57Z",
      "side": 1,
      "message": "I see. Ok, but remember to close the connection.",
      "parentUuid": "f0293a91_6b7e7df7",
      "range": {
        "startLine": 35,
        "startChar": 34,
        "endLine": 35,
        "endChar": 96
      },
      "revId": "7acfdd6409ac5c07700e2b2ab53c62a621aec701",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63d7f58d_461e0acc",
        "filename": "src/Connector.js",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1013096
      },
      "writtenOn": "2019-02-08T19:38:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a3697bb8_04dba38e",
      "range": {
        "startLine": 35,
        "startChar": 34,
        "endLine": 35,
        "endChar": 96
      },
      "revId": "7acfdd6409ac5c07700e2b2ab53c62a621aec701",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "620327b1_a8f6662d",
        "filename": "src/Connector.js",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1013096
      },
      "writtenOn": "2019-02-08T19:42:03Z",
      "side": 1,
      "message": "I still didn\u0027t understand how to avoid the `unhandled promise rejection` error.\nBecause (for what I understood) the promise should throw the error and the connector service should handle that, right?",
      "parentUuid": "b1a8ea50_0821267b",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 15
      },
      "revId": "7acfdd6409ac5c07700e2b2ab53c62a621aec701",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d4cb187_acda600c",
        "filename": "src/Connector.js",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1013086
      },
      "writtenOn": "2019-02-08T19:48:20Z",
      "side": 1,
      "message": "The error is thrown when you don\u0027t handle a rejection, either with `Promise.catch` or `try { await Promise; } catch (err) {}`. In this situation you have `.then` without a `.catch`. When an error is thrown, there isn\u0027t a handler.",
      "parentUuid": "620327b1_a8f6662d",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 15
      },
      "revId": "7acfdd6409ac5c07700e2b2ab53c62a621aec701",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e60d9777_8b9503d4",
        "filename": "src/Connector.js",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1013086
      },
      "writtenOn": "2019-02-07T21:09:40Z",
      "side": 1,
      "message": "This is very hard to understand and maintain because it has related operations happening in two parts (the first promise.all and the second promise.all) and there is this promise chaining that is supposed to be avoided with async-await. This chaining leads to hard to read code.\n\nCan you rewrite it putting all the operations for a device together. One suggestion is to create a method that creates the token and the connection for each device to be used here (only here you would have the loop). Something like:\n\nasync resetTokenAndConnect(device) {\n  cred \u003d await createToken;\n  return await createConnection(...)\n}",
      "range": {
        "startLine": 35,
        "startChar": 3,
        "endLine": 44,
        "endChar": 9
      },
      "revId": "7acfdd6409ac5c07700e2b2ab53c62a621aec701",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fce8fca_1afefb2e",
        "filename": "src/Connector.js",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1013096
      },
      "writtenOn": "2019-02-08T19:38:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e60d9777_8b9503d4",
      "range": {
        "startLine": 35,
        "startChar": 3,
        "endLine": 44,
        "endChar": 9
      },
      "revId": "7acfdd6409ac5c07700e2b2ab53c62a621aec701",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}